trigger:
  - master
pr:
  branches:
    include:
      - master
schedules:
  - cron: "0 0 * * *"
    displayName: Daily midnight build
    branches:
      include:
        - master

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: secrets
  - name: dockerhub_org
    value: modellingmind
  - name: ubuntu
    value: ubuntu18.04
  - name: azure_dtr
    value: xmind.azurecr.io

stages:
  - stage: DockerDependencyTest
    displayName: "Login to docker hub with service user"
    jobs:
      - job: TestLoginDockerHub
        steps:
          - checkout: none
          - script: docker login -u $(dockerhub-user) --password $(dockerhub-token)
      - job: TestLoginAzureRegistry
        steps:
          - checkout: none
          - script: docker login -u $(azure-container-registry-user) --password $(azure-container-registry-password)
  - stage: Build_CUDA_10
    dependsOn:
      - DockerDependencyTest
    jobs:
      - job: CUDA10
        displayName: "Build and publish Ubuntu 18.04 CUDA 10.0 CUDNN 7 containers"
        variables:
          cuda: 10.0
          cudnn: cudnn7
          base_tag: $(cuda)-$(cudnn)-devel-$(ubuntu)
          tag: $(ubuntu)-$(cuda)-$(cudnn)
        steps:
          - script: nvidia-cuda-cudnn-opengl/build.sh nvidia/cuda:$(base_tag) $(dockerhub_org)/cuda-cudnn-opengl:$(tag)
            displayName: "Build cuda opengl docker"
          - script: cd user-layer && ./build.sh $(dockerhub_org)/cuda-cudnn-opengl:$(tag) $(dockerhub_org)/cuda-cudnn-opengl-userlayer:$(tag)
            displayName: "Build user layer docker"
          - script: cd gpu-dev-pycharm && ./build.sh $(dockerhub_org)/cuda-cudnn-opengl-userlayer:$(tag) $(dockerhub_org)/gpu-dev-pycharm:$(tag)
            displayName: "Build development docker"

          - script: docker login -u $(dockerhub-user) --password $(dockerhub-token)
            displayName: "Docker login"
          - script: |
              docker push $(dockerhub_org)/cuda-cudnn-opengl:$(tag)
              docker push $(dockerhub_org)/cuda-cudnn-opengl-userlayer:$(tag)
              docker push $(dockerhub_org)/gpu-dev-pycharm:$(tag)
            displayName: "Push all containers"
            condition: and(succeeded(), not(eq(variables['Build.Reason'], 'PullRequest')))
  - stage: Build_CUDA_10_1
    dependsOn:
      - DockerDependencyTest
    jobs:
      - job: CUDA101
        displayName: "Build and publish Ubuntu 18.04 CUDA 10.1 CUDNN 7 containers"
        variables:
          cuda: 10.1
          cudnn: cudnn7
          base_tag: $(cuda)-$(cudnn)-devel-$(ubuntu)
          tag: $(ubuntu)-$(cuda)-$(cudnn)
        steps:
          - script: nvidia-cuda-cudnn-opengl/build.sh nvidia/cuda:$(base_tag) $(dockerhub_org)/cuda-cudnn-opengl:$(tag)
            displayName: "Build cuda opengl docker"
          - script: cd user-layer && ./build.sh $(dockerhub_org)/cuda-cudnn-opengl:$(tag) $(dockerhub_org)/cuda-cudnn-opengl-userlayer:$(tag)
            displayName: "Build user layer docker"
          - script: cd gpu-dev-pycharm && ./build.sh $(dockerhub_org)/cuda-cudnn-opengl-userlayer:$(tag) $(dockerhub_org)/gpu-dev-pycharm:$(tag)
            displayName: "Build development docker"

          - script: docker login -u $(dockerhub-user) --password $(dockerhub-token)
            displayName: "Docker login"
          - script: |
              docker push $(dockerhub_org)/cuda-cudnn-opengl:$(tag)
              docker push $(dockerhub_org)/cuda-cudnn-opengl-userlayer:$(tag)
              docker push $(dockerhub_org)/gpu-dev-pycharm:$(tag)
            displayName: "Push all containers"
            condition: and(succeeded(), not(eq(variables['Build.Reason'], 'PullRequest')))
  - stage: Build_CUDA_10_2
    dependsOn:
      - DockerDependencyTest
    jobs:
      - job: CUDA102
        displayName: "Build and publish Ubuntu 18.04 CUDA 10.2 CUDNN 7 containers"
        variables:
          cuda: 10.2
          cudnn: cudnn7
          base_tag: $(cuda)-$(cudnn)-devel-$(ubuntu)
          tag: $(ubuntu)-$(cuda)-$(cudnn)
        steps:
          - script: nvidia-cuda-cudnn-opengl/build.sh nvidia/cuda:$(base_tag) $(dockerhub_org)/cuda-cudnn-opengl:$(tag)
            displayName: "Build cuda opengl docker"
          - script: cd user-layer && ./build.sh $(dockerhub_org)/cuda-cudnn-opengl:$(tag) $(dockerhub_org)/cuda-cudnn-opengl-userlayer:$(tag)
            displayName: "Build user layer docker"
          - script: cd gpu-dev-pycharm && ./build.sh $(dockerhub_org)/cuda-cudnn-opengl-userlayer:$(tag) $(dockerhub_org)/gpu-dev-pycharm:$(tag)
            displayName: "Build development docker"

          - script: docker login -u $(dockerhub-user) --password $(dockerhub-token)
            displayName: "Docker login"
          - script: |
              docker push $(dockerhub_org)/cuda-cudnn-opengl:$(tag)
              docker push $(dockerhub_org)/cuda-cudnn-opengl-userlayer:$(tag)
              docker push $(dockerhub_org)/gpu-dev-pycharm:$(tag)
            displayName: "Push all containers"
            condition: and(succeeded(), not(eq(variables['Build.Reason'], 'PullRequest')))

          - script: |
              docker tag $(dockerhub_org)/cuda-cudnn-opengl:$(tag) $(dockerhub_org)/cuda-cudnn-opengl:latest
              docker tag $(dockerhub_org)/cuda-cudnn-opengl-userlayer:$(tag) $(dockerhub_org)/cuda-cudnn-opengl-userlayer:latest
              docker tag $(dockerhub_org)/gpu-dev-pycharm:$(tag) $(dockerhub_org)/gpu-dev-pycharm:latest
            displayName: "Mark CUDA 10.2 images as latest"
          - script: |
              docker push $(dockerhub_org)/cuda-cudnn-opengl:latest
              docker push $(dockerhub_org)/cuda-cudnn-opengl-userlayer:latest
              docker push $(dockerhub_org)/gpu-dev-pycharm:latest
            displayName: "Push latest tags for all images"
            condition: and(succeeded(), not(eq(variables['Build.Reason'], 'PullRequest')))
  - stage: TestContainers
    dependsOn:
      - Build_CUDA_10
      - Build_CUDA_10_1
      - Build_CUDA_10_2

  - stage: PublishToAzure
    dependsOn:
      - TestContainers
