trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: docker_hub_credentials
  - name: organization
    value: modellingmind

jobs:
- job: DockerLoginTest
  displayName: 'Login to docker hub with service user'
  steps:
  - script: docker login -u $(DOCKERHUBUSER) --password $(DOCKERHUBTOKEN)

- job: CUDA10
  dependsOn: DockerLoginTest
  displayName: 'Build and publish Ubuntu 18.04 CUDA 10.0 CUDNN 7 containers'
  variables:
    ubuntu: ubuntu18.04
    cuda: 10.0
    cudnn: cudnn7
    base_tag: $(cuda)-$(cudnn)-devel-$(ubuntu)
    tag: $(ubuntu)-$(cuda)-$(cudnn)
  steps:
  - script: nvidia-cuda-cudnn-opengl/build.sh nvidia/cuda:$(base_tag) $(organization)/cuda-cudnn-opengl:$(tag)
    displayName: "Build cuda opengl docker"
  - script: cd user-layer && ./build.sh $(organization)/cuda-cudnn-opengl:$(tag) $(organization)/cuda-cudnn-opengl-userlayer:$(tag)
    displayName: "Build user layer docker"
  - script: cd steam-games && ./build.sh $(organization)/cuda-cudnn-opengl-userlayer:$(tag) $(organization)/cuda-steam-gaming:$(tag)
    displayName: "Build steam docker"
  - script: cd gpu-dev-pycharm && ./build.sh $(organization)/cuda-cudnn-opengl-userlayer:$(tag) $(organization)/gpu-dev-pycharm:$(tag)
    displayName: "Build development docker"

  - script: docker login -u $(DOCKERHUBUSER) --password $(DOCKERHUBTOKEN)
    displayName: "Docker login"
  - script: docker push $(organization)/cuda-cudnn-opengl:$(tag)
    displayName: "Push cuda opengl docker"
  - script: docker push $(organization)/cuda-cudnn-opengl-userlayer:$(tag)
    displayName: "Push cuda userlayer docker"
  - script: docker push $(organization)/cuda-steam-gaming:$(tag)
    displayName: "Push cuda steam docker"
  - script: docker push $(organization)/gpu-dev-pycharm:$(tag)
    displayName: "Push gpu development pycharm docker"

- job: CUDA101
  dependsOn: DockerLoginTest
  displayName: 'Build and publish Ubuntu 18.04 CUDA 10.1 CUDNN 7 containers'
  variables:
    ubuntu: ubuntu18.04
    cuda: 10.1
    cudnn: cudnn7
    base_tag: $(cuda)-$(cudnn)-devel-$(ubuntu)
    tag: $(ubuntu)-$(cuda)-$(cudnn)
  steps:
  - script: nvidia-cuda-cudnn-opengl/build.sh nvidia/cuda:$(base_tag) $(organization)/cuda-cudnn-opengl:$(tag)
    displayName: "Build cuda opengl docker"
  - script: cd user-layer && ./build.sh $(organization)/cuda-cudnn-opengl:$(tag) $(organization)/cuda-cudnn-opengl-userlayer:$(tag)
    displayName: "Build user layer docker"
  - script: cd steam-games && ./build.sh $(organization)/cuda-cudnn-opengl-userlayer:$(tag) $(organization)/cuda-steam-gaming:$(tag)
    displayName: "Build steam docker"
  - script: cd gpu-dev-pycharm && ./build.sh $(organization)/cuda-cudnn-opengl-userlayer:$(tag) $(organization)/gpu-dev-pycharm:$(tag)
    displayName: "Build development docker"

  - script: docker login -u $(DOCKERHUBUSER) --password $(DOCKERHUBTOKEN)
    displayName: "Docker login"
  - script: docker push $(organization)/cuda-cudnn-opengl:$(tag)
    displayName: "Push cuda opengl docker"
  - script: docker push $(organization)/cuda-cudnn-opengl-userlayer:$(tag)
    displayName: "Push cuda userlayer docker"
  - script: docker push $(organization)/cuda-steam-gaming:$(tag)
    displayName: "Push cuda steam docker"
  - script: docker push $(organization)/gpu-dev-pycharm:$(tag)
    displayName: "Push gpu development pycharm docker"

- job: CUDA102
  dependsOn: DockerLoginTest
  displayName: 'Build and publish Ubuntu 18.04 CUDA 10.2 CUDNN 7 containers'
  variables:
    ubuntu: ubuntu18.04
    cuda: 10.2
    cudnn: cudnn7
    base_tag: $(cuda)-$(cudnn)-devel-$(ubuntu)
    tag: $(ubuntu)-$(cuda)-$(cudnn)
  steps:
  - script: nvidia-cuda-cudnn-opengl/build.sh nvidia/cuda:$(base_tag) $(organization)/cuda-cudnn-opengl:$(tag)
    displayName: "Build cuda opengl docker"
  - script: cd user-layer && ./build.sh $(organization)/cuda-cudnn-opengl:$(tag) $(organization)/cuda-cudnn-opengl-userlayer:$(tag)
    displayName: "Build user layer docker"
  - script: cd steam-games && ./build.sh $(organization)/cuda-cudnn-opengl-userlayer:$(tag) $(organization)/cuda-steam-gaming:$(tag)
    displayName: "Build steam docker"
  - script: cd gpu-dev-pycharm && ./build.sh $(organization)/cuda-cudnn-opengl-userlayer:$(tag) $(organization)/gpu-dev-pycharm:$(tag)
    displayName: "Build development docker"

  - script: docker login -u $(DOCKERHUBUSER) --password $(DOCKERHUBTOKEN)
    displayName: "Docker login"
  - script: docker push $(organization)/cuda-cudnn-opengl:$(tag)
    displayName: "Push cuda opengl docker"
  - script: docker push $(organization)/cuda-cudnn-opengl-userlayer:$(tag)
    displayName: "Push cuda userlayer docker"
  - script: docker push $(organization)/cuda-steam-gaming:$(tag)
    displayName: "Push cuda steam docker"
  - script: docker push $(organization)/gpu-dev-pycharm:$(tag)
    displayName: "Push gpu development pycharm docker"

  - script: |
      docker tag $(organization)/cuda-cudnn-opengl:$(tag) $(organization)/cuda-cudnn-opengl:latest
      docker tag $(organization)/cuda-cudnn-opengl-userlayer:$(tag) $(organization)/cuda-cudnn-opengl-userlayer:latest
      docker tag $(organization)/cuda-steam-gaming:$(tag) $(organization)/cuda-steam-gaming:latest
      docker tag $(organization)/gpu-dev-pycharm:$(tag) $(organization)/gpu-dev-pycharm:latest
    displayName: "Mark CUDA 10.2 images as latest"
  - script: |
      docker push $(organization)/cuda-cudnn-opengl:latest
      docker push $(organization)/cuda-cudnn-opengl-userlayer:latest
      docker push $(organization)/cuda-steam-gaming:latest
      docker push $(organization)/gpu-dev-pycharm:latest
    displayName: "Push latest tags for all images"
